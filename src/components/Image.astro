---
import { generateResponsiveImageAttrs } from "../helpers/images.mjs";

const {
  src, // base filename without extension, e.g. "cover"
  formats = ["avif", "webp", "jpeg"],
  widths = [400, 800, 1200, 1400],
  sizes = "100vw",
  imageClass = "w-fit h-auto bg-gray-100 rounded-xl",
  alt = "Blog Image",
  loading = "lazy",
  decoding = "async",
  fetchpriority = "auto",
} = Astro.props;

const attrs = generateResponsiveImageAttrs({
  src,
  formats,
  widths,
  sizes,
  alt,
  loading,
  decoding,
  fetchpriority,
  className: imageClass,
});
---

<picture>
  {
    formats.map(format => (
      <source
        srcset={widths
          .map(w => `/assets/images/blog/${src}-${w}.${format} ${w}w`)
          .join(", ")}
        type={`image/${format}`}
        sizes={sizes}
      />
    ))
  }
  <img
    src={`/assets/images/blog/${src}-${widths[widths.length - 1]}.${formats[formats.length - 1]}`}
    alt={alt}
    class={`${imageClass} img-loading`}
    loading={loading}
    decoding={decoding}
    fetchpriority={fetchpriority}
    width={widths[widths.length - 1]}
    style="max-width:100%;height:auto;"
  />
</picture>

<style>
  .blurry-load {
    position: relative;
    overflow: hidden;
    display: inline-block;
  }
  .blurry-load img {
    display: block;
    width: 100%;
    height: auto;
    transition: filter 600ms ease, opacity 400ms ease;
    filter: blur(20px) scale(1.02);
  }
  .blurry-load img.img-loaded {
    filter: none;
    opacity: 1;
  }
  .blurry-load .no-filter {
    background: linear-gradient(90deg, #f0f0f0 25%, #e8e8e8 37%, #f0f0f0 63%);
    background-size: 400% 100%;
    animation: shimmer 1.2s linear infinite;
    min-height: 1px;
  }
  @keyframes shimmer {
    0% { background-position: 100% 0 }
    100% { background-position: -100% 0 }
  }
</style>
