---
import { slugifyStr } from "@/utils/slugify";
import Datetime from "./Datetime.astro";
import type { CollectionEntry } from "astro:content";

export interface Props {
  href?: string;
  frontmatter: any;
  secHeading?: boolean;
  priority?: "high" | "low";
}

const { href, frontmatter, secHeading = true, priority = "low" } = Astro.props;

const { title, pubDatetime, modDatetime, description, ogImage } = frontmatter;

// Use local image path or fallback to default
const imageSrc = ogImage || "/pickyzz-og.png";

// Generate placeholder path by replacing extension with .placeholder.jpg
const generatePlaceholder = (imageUrl: string) => {
  if (!imageUrl || imageUrl === "/pickyzz-og.png") {
    return "/pickyzz-og.png";
  }

  // Convert filename.ext to filename.placeholder.jpg
  const urlParts = imageUrl.split('/');
  const filename = urlParts[urlParts.length - 1];
  const nameWithoutExt = filename.split('.').slice(0, -1).join('.');
  urlParts[urlParts.length - 1] = `${nameWithoutExt}.placeholder.jpg`;
  return urlParts.join('/');
};

const placeholderSrc = generatePlaceholder(imageSrc);

const headerProps = {
  style: { viewTransitionName: slugifyStr(title) },
  class:
    "text-white text-[1.1rem] text-center text-lg font-light decoration-dashed",
};
---

<li class="my-6 max-h-[350px]">
  <a
    id="card-url"
    href={href}
    class="decoration-dashed underline-offset-4 focus-visible:no-underline focus-visible:underline-offset-0"
  >
    <div
      class="relative mb-4 flex-shrink-0 overflow-hidden rounded-lg object-cover"
    >
        <img
          class="card-animate h-[13rem] w-[100vw] scale-115 object-cover object-center img-loading blurry-load"
          src={placeholderSrc}
          data-large={imageSrc}
          loading="eager"
          decoding="async"
          fetchpriority={priority}
          alt={title
            ? `Cover image for blog post: ${title}`
            : "Blog post cover image"}
          style={`filter: blur(0px); transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);`}
          onload={`this.style.filter = 'none';`}
        />
      <div
        class="absolute bottom-0 left-0 right-0 flex min-h-[35%] items-center justify-center bg-black/75 px-10 py-2"
      >
        {
          secHeading ? (
            <h2 {...headerProps}>{title}</h2>
          ) : (
            <h3 {...headerProps}>{title}</h3>
          )
        }
      </div>
    </div>
    <p class="mb-4 line-clamp-2 h-[3rem] text-center text-base">
      {description}
    </p>
  </a>
  <Datetime
    pubDatetime={pubDatetime}
    modDatetime={modDatetime}
    class="justify-center"
  />
</li>

<style>
  .blurry-load {
    animation: fadeIn 0.3s ease-in-out;
  }

  @keyframes fadeIn {
    from {
      opacity: 0.8;
    }
    to {
      opacity: 1;
    }
  }

  .card-animate {
    transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .card-animate:hover {
    transform: scale(1.08);
  }

  /* Add smooth transition for parent container */
  li a:hover .card-animate {
    transform: scale(1.08);
  }
</style>
