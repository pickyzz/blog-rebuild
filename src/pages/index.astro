---
import Layout from "@/layouts/Layout.astro";
import Header from "@/components/Header.astro";
import Footer from "@/components/Footer.astro";
import LinkButton from "@/components/LinkButton.astro";
import Hr from "@/components/Hr.astro";
import Card from "@/components/Card.astro";
import Socials from "@/components/Socials.astro";
import { SITE } from "@/config";
import { SOCIALS } from "@/constants";
import IconArrowRight from "@/assets/icons/IconArrowRight.svg";
import { getCollection } from "astro:content";

// SSG mode - fetch posts from content collections
export const prerender = true;

const posts = await getCollection("blog", ({ data }) => !data.draft);
console.log(`[HOMEPAGE SSG] Loaded ${posts.length} posts from content collections`);

// Sort posts by publication date (newest first)
const sortedPosts = posts.sort(
  (a, b) => new Date(b.data.pubDatetime).valueOf() - new Date(a.data.pubDatetime).valueOf()
);
console.log(`[HOMEPAGE] Sorted posts length: ${sortedPosts.length}`);

const featuredPosts = sortedPosts.filter(({ data }) => data.featured);
console.log(`[HOMEPAGE] Featured posts length: ${featuredPosts.length}`);

const recentPosts = sortedPosts.filter(({ data }) => !data.featured);
console.log(`[HOMEPAGE] Recent posts length: ${recentPosts.length}`);
---

<Layout
  description="‡∏ö‡∏•‡πá‡∏≠‡∏Å‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß‡∏Ç‡∏≠‡∏á Parinya (Pickyzz) T. ‡∏ú‡∏π‡πâ‡∏û‡∏±‡∏í‡∏ô‡∏≤ front-end ‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡∏î‡πâ‡∏ß‡∏¢‡∏ï‡∏ô‡πÄ‡∏≠‡∏á ‡πÅ‡∏ä‡∏£‡πå‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö React, JavaScript, HTML, CSS ‡πÅ‡∏•‡∏∞‡πÄ‡∏ó‡∏Ñ‡πÇ‡∏ô‡πÇ‡∏•‡∏¢‡∏µ‡πÄ‡∏ß‡πá‡∏ö‡∏≠‡∏∑‡πà‡∏ô‡πÜ ‡πÉ‡∏ô‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢"
>
  <Header />
  <main id="main-content" data-layout="index">
    <section id="hero" class="pb-6 pt-8">
      <h1 class="my-4 inline-block text-4xl font-bold sm:my-8 sm:text-5xl">
        SAWASDEE üôèüèª
      </h1>
      <p>I&rsquo;m Parinya (Pickyzz) T.</p>
      <p>Self-taught front-end developer.</p>
      {
        // only display if at least one social link is enabled
        SOCIALS.length > 0 && (
          <div class="mt-4 flex flex-col sm:flex-row sm:items-center">
            <Socials />
          </div>
        )
      }
    </section>

    <Hr />

    {
      featuredPosts.length > 0 && (
        <>
          <section id="featured" class="pb-6 pt-12">
            <h2 class="my-[1.3rem] text-center text-2xl font-semibold tracking-wide">
              Featured
            </h2>
            <ul class="mx-auto grid max-w-[80vw] grid-cols-1 gap-8 md:max-w-4xl md:grid-cols-2">
              {featuredPosts.map(
                (post, index) =>
                  index < 2 && (
                    <Card
                      href={`/blog/${post.slug}`}
                      frontmatter={post.data}
                      secHeading={false}
                      priority="high"
                    />
                  )
              )}
            </ul>
          </section>
          {recentPosts.length > 0 && <Hr />}
        </>
      )
    }

    {
      recentPosts.length > 0 && (
        <section id="recent-posts" class="pb-6 pt-12">
          <h2 class="my-[1.3rem] text-center text-2xl font-semibold tracking-wide">
            Recent Posts
          </h2>
          <ul class="mx-auto grid max-w-[80vw] grid-cols-1 gap-8 md:max-w-4xl md:grid-cols-2">
            {sortedPosts
              .filter((post) => !post.data.featured)
              .map(
                (post, index) =>
                  index < SITE.postOnIndex && (
                    <Card
                      href={`/blog/${post.slug}`}
                      frontmatter={post.data}
                      secHeading={false}
                      priority="low"
                    />
                  )
              )}
          </ul>
        </section>
      )
    }

    <div class="my-8 text-center">
      <LinkButton href="/blog">
        All Posts
        <IconArrowRight class="inline-block" />
      </LinkButton>
    </div>
  </main>
  <Footer />
</Layout>

<script>
  document.addEventListener("astro:page-load", () => {
    const indexLayout = (document.querySelector("#main-content") as HTMLElement)
      ?.dataset?.layout;
    if (indexLayout) {
      sessionStorage.setItem("backUrl", "/");
    }
  });
</script>
