---
import Layout from "@/layouts/Layout.astro";
import Header from "@/components/Header.astro";
import Footer from "@/components/Footer.astro";
import Main from "@/layouts/Main.astro";
import Card from "@/components/Card.astro";
import Pagination from "@/components/Pagination.astro";

/* SSG mode - fetch from content collections */
export const prerender = true;

const { SITE } = await import("@/config");
const { getCollection } = await import("astro:content");
const posts = await getCollection("blog", ({ data }) => !data.draft);

// Sort posts by publication date (newest first)
const sortedPosts = posts.sort(
  (a, b) => new Date(b.data.pubDatetime).valueOf() - new Date(a.data.pubDatetime).valueOf()
);

const pageSize = SITE.postPerPage || 10;
const page = {
  posts: sortedPosts.slice(0, pageSize),
  currentPage: 1,
  totalPages: Math.max(1, Math.ceil(sortedPosts.length / pageSize)),
  start: 1,
  end: Math.min(pageSize, sortedPosts.length),
  total: sortedPosts.length,
  size: pageSize,
  url: "/blog",
  prev: undefined,
  next: sortedPosts.length > pageSize ? "/blog/page/2" : undefined,
};

console.log(`[BLOG INDEX SSG] Loaded ${posts.length} posts from content collections`);
console.log(`[BLOG INDEX SSG] Displaying ${page.posts.length} posts`);
---

<Layout title="Posts" canonicalURL="/blog">
  <Header />
  <Main pageTitle="Posts" pageDesc="All the articles I've posted.">
    {
      page.posts && page.posts.length > 0 ? (
        <ul class="mx-auto grid max-w-[80vw] grid-cols-1 gap-8 md:max-w-4xl md:grid-cols-2">
          {page.posts.map((post) => (
            <Card href={`/blog/${post.slug}`} frontmatter={post.data} />
          ))}
        </ul>
      ) : (
        <p class="text-center">No posts available.</p>
      )
    }
  </Main>

  <Pagination {page} />

  <Footer noMarginTop={page.totalPages > 1} />
</Layout>
