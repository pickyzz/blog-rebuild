---
import PostDetails from "@/layouts/PostDetails.astro";
import getSortedPosts from "@/utils/getSortedPosts";
import { getNotionPosts } from "@/utils/getNotionPosts";
import { getPostPaths, ISR_CONFIG } from "@/utils/astro-isr/getStaticPaths";

export interface Props {
  post: any;
}

/* ISR mode: generate static paths with revalidation */
export const prerender = true;
export async function getStaticPaths() {
  return await getPostPaths();
}

const post = Astro.props.post;

if (!post || !post.data) {
  return Astro.redirect("/404");
}

const posts = await getNotionPosts();
const sortedPosts = getSortedPosts(posts);

/* Set cache-control header for ISR response */
if (Astro.response && Astro.response.headers) {
  Astro.response.headers.set(
    "cache-control",
    `public, max-age=${ISR_CONFIG.POST}, stale-while-revalidate=${ISR_CONFIG.POST * 2}`
  );
}
---

<PostDetails post={post} posts={sortedPosts} />
