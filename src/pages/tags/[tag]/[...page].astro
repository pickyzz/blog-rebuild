---
import type { GetStaticPathsOptions, Page } from "astro";
import type { CollectionEntry } from "astro:content";
import Main from "@/layouts/Main.astro";
import Layout from "@/layouts/Layout.astro";
import Header from "@/components/Header.astro";
import Footer from "@/components/Footer.astro";
import Card from "@/components/Card.astro";
import Pagination from "@/components/Pagination.astro";
import { SITE } from "@/config";
import { getNotionPostsByTag, getNotionUniqueTags } from "@/utils/getNotionPosts";

export async function getStaticPaths({ paginate }: GetStaticPathsOptions) {
  const tags = await getNotionUniqueTags();
  const result = [];
  for (const { tag, tagName } of tags) {
    const tagPosts = await getNotionPostsByTag(tagName);
    result.push(...paginate(tagPosts, {
      params: { tag },
      props: { tagName },
      pageSize: SITE.postPerPage,
    }));
  }
  return result;
}


export const prerender = true;
const params = Astro.params;
const { tag } = params;
const { tagName } = Astro.props;
const { page } = Astro.props;
---

<Layout title={`Tag: ${tagName} | ${SITE.title}`}>
  <Header />
  <Main
    pageTitle={[`Tag:`, `${tagName}`]}
    titleTransition={tag}
    pageDesc={`All the articles with the tag "${tagName}".`}
  >
    <ul
      class="mx-auto grid max-w-[80vw] grid-cols-1 gap-8 md:max-w-4xl md:grid-cols-2"
    >
      {
        page?.data?.map(({ data, id }: any) => (
          <Card href={`/blog/${data.slug}`} frontmatter={data} />
        ))
      }
    </ul>
  </Main>

  <Pagination {page} />

  <Footer noMarginTop={page?.lastPage > 1} />
</Layout>
