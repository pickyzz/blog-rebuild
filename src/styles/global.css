@import "tailwindcss/base";
@import "tailwindcss/components";
@import "tailwindcss/utilities";
@import "./typography.css";
@import "./codeblocks.css";

/* Prism.js GitHub theme for light mode */
html.light .notion-content .code-content pre[class*="language-"],
html[data-theme="light"] .notion-content .code-content pre[class*="language-"],
.notion-code-block[data-theme="light"] .code-content pre[class*="language-"] {
  background: var(--code-bg) !important;
  color: var(--code-fg) !important;
}

html.light .notion-content .code-content pre[class*="language-"] code,
html[data-theme="light"] .notion-content .code-content pre[class*="language-"] code,
.notion-code-block[data-theme="light"] .code-content pre[class*="language-"] code {
  color: var(--code-fg) !important;
}

html[data-theme="light"] .notion-content .token.comment,
html[data-theme="light"] .notion-content .token.prolog,
html[data-theme="light"] .notion-content .token.doctype,
html[data-theme="light"] .notion-content .token.cdata {
  color: #6a737d;
}

html[data-theme="light"] .notion-content .token.punctuation {
  color: #24292e;
}

html[data-theme="light"] .notion-content .token.property,
html[data-theme="light"] .notion-content .token.tag,
html[data-theme="light"] .notion-content .token.constant,
html[data-theme="light"] .notion-content .token.symbol,
html[data-theme="light"] .notion-content .token.deleted {
  color: #005cc5;
}

html[data-theme="light"] .notion-content .token.boolean,
html[data-theme="light"] .notion-content .token.number {
  color: #005cc5;
}

html[data-theme="light"] .notion-content .token.selector,
html[data-theme="light"] .notion-content .token.attr-name,
html[data-theme="light"] .notion-content .token.string,
html[data-theme="light"] .notion-content .token.char,
html[data-theme="light"] .notion-content .token.builtin,
html[data-theme="light"] .notion-content .token.inserted {
  color: #032f62;
}

html[data-theme="light"] .notion-content .token.operator,
html[data-theme="light"] .notion-content .token.entity,
html[data-theme="light"] .notion-content .token.url,
html[data-theme="light"] .notion-content .token.variable {
  color: #d73a49;
}

html[data-theme="light"] .notion-content .token.atrule,
html[data-theme="light"] .notion-content .token.attr-value,
html[data-theme="light"] .notion-content .token.function,
html[data-theme="light"] .notion-content .token.class-name {
  color: #6f42c1;
}

html[data-theme="light"] .notion-content .token.keyword {
  color: #d73a49;
}

html[data-theme="light"] .notion-content .token.regex,
html[data-theme="light"] .notion-content .token.important {
  color: #e36209;
}

html[data-theme="light"] .notion-content .token.template-string,
html[data-theme="light"] .notion-content .token.template-string .token.string {
  color: #032f62;
  font-size: inherit;
}

/* Token color mappings scoped to .notion-code-block so codeblocks.css doesn't need !important */
.notion-code-block[data-theme="light"] .token.comment,
.notion-code-block[data-theme="light"] .token.prolog,
.notion-code-block[data-theme="light"] .token.doctype,
.notion-code-block[data-theme="light"] .token.cdata {
  color: #6a737d;
}
.notion-code-block[data-theme="light"] .token.punctuation { color: #24292e; }
.notion-code-block[data-theme="light"] .token.property,
.notion-code-block[data-theme="light"] .token.tag,
.notion-code-block[data-theme="light"] .token.constant,
.notion-code-block[data-theme="light"] .token.symbol,
.notion-code-block[data-theme="light"] .token.deleted { color: #005cc5; }
.notion-code-block[data-theme="light"] .token.boolean,
.notion-code-block[data-theme="light"] .token.number { color: #005cc5; }
.notion-code-block[data-theme="light"] .token.selector,
.notion-code-block[data-theme="light"] .token.attr-name,
.notion-code-block[data-theme="light"] .token.string,
.notion-code-block[data-theme="light"] .token.char,
.notion-code-block[data-theme="light"] .token.builtin,
.notion-code-block[data-theme="light"] .token.inserted { color: #032f62; }
.notion-code-block[data-theme="light"] .token.operator,
.notion-code-block[data-theme="light"] .token.entity,
.notion-code-block[data-theme="light"] .token.url,
.notion-code-block[data-theme="light"] .token.variable { color: #d73a49; }
.notion-code-block[data-theme="light"] .token.atrule,
.notion-code-block[data-theme="light"] .token.attr-value,
.notion-code-block[data-theme="light"] .token.function,
.notion-code-block[data-theme="light"] .token.class-name { color: #6f42c1; }
.notion-code-block[data-theme="light"] .token.keyword { color: #d73a49; }
.notion-code-block[data-theme="light"] .token.regex,
.notion-code-block[data-theme="light"] .token.important { color: #e36209; }


/* Prism.js Dracula theme for dark mode */
html.dark .notion-content .code-content pre[class*="language-"],
html[data-theme="dark"] .notion-content .code-content pre[class*="language-"],
.notion-code-block[data-theme="dark"] .code-content pre[class*="language-"] {
  background: var(--code-bg) !important;
  color: var(--code-fg) !important;
}

html.dark .notion-content .code-content pre[class*="language-"] code,
html[data-theme="dark"] .notion-content .code-content pre[class*="language-"] code,
.notion-code-block[data-theme="dark"] .code-content pre[class*="language-"] code {
  color: var(--code-fg) !important;
}

html[data-theme="dark"] .notion-content .token.comment,
html[data-theme="dark"] .notion-content .token.prolog,
html[data-theme="dark"] .notion-content .token.doctype,
html[data-theme="dark"] .notion-content .token.cdata {
  color: #6272a4;
}

html[data-theme="dark"] .notion-content .token.punctuation {
  color: #f8f8f2;
}

html[data-theme="dark"] .notion-content .token.property,
html[data-theme="dark"] .notion-content .token.tag,
html[data-theme="dark"] .notion-content .token.constant,
html[data-theme="dark"] .notion-content .token.symbol,
html[data-theme="dark"] .notion-content .token.deleted {
  color: #ff79c6;
}

html[data-theme="dark"] .notion-content .token.boolean,
html[data-theme="dark"] .notion-content .token.number {
  color: #bd93f9;
}

html[data-theme="dark"] .notion-content .token.selector,
html[data-theme="dark"] .notion-content .token.attr-name,
html[data-theme="dark"] .notion-content .token.string,
html[data-theme="dark"] .notion-content .token.char,
html[data-theme="dark"] .notion-content .token.builtin,
html[data-theme="dark"] .notion-content .token.inserted {
  color: #f1fa8c;
}

html[data-theme="dark"] .notion-content .token.operator,
html[data-theme="dark"] .notion-content .token.entity,
html[data-theme="dark"] .notion-content .token.url,
html[data-theme="dark"] .notion-content .token.variable {
  color: #ff79c6;
}

html[data-theme="dark"] .notion-content .token.atrule,
html[data-theme="dark"] .notion-content .token.attr-value,
html[data-theme="dark"] .notion-content .token.function,
html[data-theme="dark"] .notion-content .token.class-name {
  color: #50fa7b;
}

html[data-theme="dark"] .notion-content .token.keyword {
  color: #ff79c6;
}

html[data-theme="dark"] .notion-content .token.regex,
html[data-theme="dark"] .notion-content .token.important {
  color: #ffb86c;
}

html[data-theme="dark"] .notion-content .token.template-string,
html[data-theme="dark"] .notion-content .token.template-string .token.string {
  color: #f1fa8c;
  font-size: inherit;
}

/* Token color mappings for notion code blocks in dark theme */
.notion-code-block[data-theme="dark"] .token.comment,
.notion-code-block[data-theme="dark"] .token.prolog,
.notion-code-block[data-theme="dark"] .token.doctype,
.notion-code-block[data-theme="dark"] .token.cdata {
  color: #6272a4;
}
.notion-code-block[data-theme="dark"] .token.punctuation { color: #f8f8f2; }
.notion-code-block[data-theme="dark"] .token.property,
.notion-code-block[data-theme="dark"] .token.tag,
.notion-code-block[data-theme="dark"] .token.constant,
.notion-code-block[data-theme="dark"] .token.symbol,
.notion-code-block[data-theme="dark"] .token.deleted { color: #ff79c6; }
.notion-code-block[data-theme="dark"] .token.boolean,
.notion-code-block[data-theme="dark"] .token.number { color: #bd93f9; }
.notion-code-block[data-theme="dark"] .token.selector,
.notion-code-block[data-theme="dark"] .token.attr-name,
.notion-code-block[data-theme="dark"] .token.string,
.notion-code-block[data-theme="dark"] .token.char,
.notion-code-block[data-theme="dark"] .token.builtin,
.notion-code-block[data-theme="dark"] .token.inserted { color: #f1fa8c; }
.notion-code-block[data-theme="dark"] .token.operator,
.notion-code-block[data-theme="dark"] .token.entity,
.notion-code-block[data-theme="dark"] .token.url,
.notion-code-block[data-theme="dark"] .token.variable { color: #ff79c6; }
.notion-code-block[data-theme="dark"] .token.atrule,
.notion-code-block[data-theme="dark"] .token.attr-value,
.notion-code-block[data-theme="dark"] .token.function,
.notion-code-block[data-theme="dark"] .token.class-name { color: #50fa7b; }
.notion-code-block[data-theme="dark"] .token.keyword { color: #ff79c6; }
.notion-code-block[data-theme="dark"] .token.regex,
.notion-code-block[data-theme="dark"] .token.important { color: #ffb86c; }


@custom-variant dark (&:where([data-theme=dark], [data-theme=dark] *));

:root,
html[data-theme="light"] {
  --background: #fdfdfd;
  --foreground: #282728;
  --accent: #006cac;
  --muted: #e6e6e6;
  --border: #ece9e9;
  /* Code block theme variables (moved from codeblocks.css) */
    --code-bg: #f6f8fa; /* light surface for code blocks */
  --code-fg: #0b1220;
  --code-border: rgba(15,23,42,0.06);
  --code-inner-border: rgba(15,23,42,0.06);
  --code-inline-bg: rgba(15,23,42,0.04);
  --code-radius: 10px;
  --code-padding: 0.75rem 1rem;
  --copy-btn-bg: rgba(15,23,42,0.04);
  --copy-btn-fg: #0f172a;
  --copy-btn-hover: rgba(15,23,42,0.06);
  --copy-btn-size: 36px;
  --copy-transition: 160ms ease;
  /* subtle focus ring color for copy buttons (theme-aware) */
  --copy-focus-ring: rgba(0,108,172,0.12);
}

html[data-theme="dark"] {
  --background: #212737;
  --foreground: #eaedf3;
  --accent: #ff6b01;
  --muted: #343f60bf;
  --border: #ab4b08;
  /* Code block dark overrides */
    --code-bg: #282a36; /* match AstroPaper subtle dark */
  --code-fg: #e9f2fb; /* slightly brighter */
  --code-inner-border: rgba(255,255,255,0.04);
  --copy-btn-bg: rgba(255,255,255,0.03);
  --copy-btn-fg: #e6eef8;
  --copy-btn-hover: rgba(255,255,255,0.06);
    --muted: rgba(0,0,0,0.04);
  /* dark theme focus ring */
  --copy-focus-ring: rgba(255,255,255,0.06);
}



/* @theme inline {
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --color-accent: var(--accent);
  --color-muted: var(--muted);
  --color-border: var(--border);
} */

@layer base {
  * {
    border-color: var(--border);
    outline-color: var(--accent);
    scrollbar-width: auto;
    scrollbar-color: var(--muted) transparent;
  }
  html {
    overflow-y: scroll;
    scroll-behavior: smooth;
  }
  body {
    background-color: var(--background);
    color: var(--foreground);
    font-family:
      ui-monospace, SFMono-Regular, "SF Mono", Consolas, "Liberation Mono",
      Menlo, monospace;
    min-height: 100svh;
    display: flex;
    flex-direction: column;
  }
  a,
  button {
    outline-color: var(--accent);
    outline-offset: 1px;
  }
  a:focus-visible,
  button:focus-visible {
    text-decoration: none;
    outline-style: dashed;
    outline-width: 2px;
  }
  button:not(:disabled),
  [role="button"]:not(:disabled) {
    cursor: pointer;
  }
  section,
  footer {
    margin-left: auto;
    margin-right: auto;
    max-width: 56rem;
    padding-left: 1rem;
    padding-right: 1rem;
  }
}

.active-nav {
  color: var(--accent);
  font-weight: bold;
  text-decoration: none;
}

/* Notion Content Styles */
.notion-content {
  line-height: 1.7;
}

.notion-content h1,
.notion-content h2,
.notion-content h3,
.notion-content h4,
.notion-content h5,
.notion-content h6 {
  color: var(--foreground);
  margin-top: 1.5em;
  margin-bottom: 0.5em;
  font-weight: 600;
}

.notion-content h1 {
  font-size: 2em;
  border-bottom: 2px solid var(--border);
  padding-bottom: 0.3em;
  display: inline-block;
  width: fit-content;
}

.notion-content h2 {
  font-size: 1.5em;
  border-bottom: 1px solid var(--border);
  padding-bottom: 0.2em;
  display: inline-block;
  width: fit-content;
}

.notion-content h3 {
  font-size: 1.25em;
}

.notion-content p {
  margin: 1em 0;
}

.notion-content ul,
.notion-content ol {
  margin: 1em 0;
  padding-left: 2em;
}

.notion-content li {
  margin: 0.5em 0;
}

.notion-content blockquote {
  border-left: 4px solid var(--accent);
  padding-left: 1em;
  margin: 1.5em 0;
  font-style: italic;
  background-color: var(--muted);
  padding: 1em;
  border-radius: 4px;
}

.notion-content code {
  padding: 0.2em 0.4em;
  border-radius: 4px;
  font-size: 0.8em;
}

.notion-content pre:not(.shiki) {
  background-color: var(--muted);
  padding: 1em;
  border-radius: 6px;
  overflow-x: auto;
  margin: 1em 0;
}

/* Keep the generic notion pre styling but ensure our notion-code-block uses the inner <pre> as the visible surface
   so we don't get a double framed appearance (outer muted box + inner code box). These selectors are specific
   and placed after the generic rule so they win. */
.notion-content .notion-code-block pre,
.notion-content .notion-code-block .code-content pre {
  background: var(--code-bg);
  color: var(--code-fg);
  padding: 1.25rem;
  border-radius: 0px 0px 8px 8px;
  border: 1px solid var(--code-border);
  margin: 0;
}

.notion-content .notion-code-block pre:not(.shiki) {
  /* neutralize the generic wrapper for code blocks so there's no outer frame */
  background: transparent;
  padding: 0;
  border-radius: 0;
}

.notion-content pre:not(.shiki) code {
  background-color: transparent;
  padding: 0;
}

.notion-content .notion-image {
  max-width: 100%;
  height: auto;
  border-radius: 8px;
  margin: 1em 0;
}

.notion-content .notion-image img {
  max-width: 100%;
  height: auto;
  border-radius: 8px;
  display: block;
  margin-left: auto;
  margin-right: auto;
  /* remove debug border */
}

.notion-content img {
  display: block !important;
  margin-left: auto !important;
  margin-right: auto !important;
  width: auto !important;
  max-width: 100% !important;
  object-fit: contain !important;
}

.notion-content figure {
  margin: 1.5em 0;
}

.notion-content figcaption {
  text-align: center;
  font-size: 0.9em;
  color: var(--foreground);
  opacity: 0.8;
  margin-top: 0.5em;
}

.notion-content .notion-video {
  margin: 1.5em 0;
}

.notion-content iframe[src*="youtube.com"],
.notion-content .notion-video video {
  max-width: 100%;
  border-radius: 8px;
}

.notion-content .notion-embed {
  margin: 1.5em 0;
}

.notion-content .notion-embed iframe {
  max-width: 100%;
  border-radius: 8px;
}

.notion-content .notion-code-block {
  margin: 1.5em 0;
}

.notion-content .notion-quote {
  border-left: 4px solid var(--accent);
  margin: 0.75em 0;
  font-style: italic;
  background-color: var(--muted);
  padding: 0.25em 0.5em 0.25em 0.75em;
  border-radius: 4px;
}

.notion-content .notion-callout {
  display: flex;
  align-items: flex-start;
  gap: 0.75em;
  background-color: var(--muted);
  padding: 1em;
  border-radius: 6px;
  margin: 1em 0;
  border-left: 4px solid var(--accent);
}

.notion-content .callout-icon {
  font-size: 1.25em;
  flex-shrink: 0;
}

.notion-content .callout-content {
  flex: 1;
}

.notion-content .error-message {
  background-color: #fee2e2;
  border: 1px solid #fca5a5;
  color: #dc2626;
  padding: 1em;
  border-radius: 6px;
  margin: 1em 0;
}

.notion-content .error-message p {
  margin: 0.5em 0;
}

/* Badge Styles */
.badge {
  @apply inline-flex items-center px-2 py-1 text-xs font-medium rounded-full;
}

.badge-primary {
  @apply bg-accent text-background;
}

.badge-outline {
  @apply bg-transparent border border-accent text-accent;
}

.badge-sm {
  @apply px-1.5 py-0.5 text-xs;
}

.badge-md {
  @apply px-2.5 py-1 text-sm;
}

/* TOC Active State */
.toc-link.active {
  @apply px-2 py-1 font-semibold border-l-2 rounded border-accent bg-muted text-foreground;
}

.toc-link.active span {
  @apply text-accent;
}

/* Code-block UI moved to src/styles/codeblocks.css (source-of-truth) */

img.img-loading {
  filter: blur(10px);
  opacity: 0.7;
  transition: filter 0.5s ease-out, opacity 0.5s ease-out, transform 0.5s ease-out;
}

img.img-loaded {
  filter: blur(0);
  opacity: 1;
}

/* Override potential embedded theme colors (e.g. Nord's #2e3440ff / #d8dee9ff)
   Ensure Shiki / Prism / generated code blocks follow our site variables.
*/
.shiki,
.astro-code,
pre[class*="language-"],
.notion-code-block .code-content pre,
.code-block pre {
  /* Force black code surface regardless of theme */
  --code-bg: #000;
  --code-fg: #e6edf3;
  background: var(--code-bg) !important;
  color: var(--code-fg) !important;
}

/* Do not override token colors from Shiki or Prism.
   Previously this block forced spans to inherit the container color,
   which disabled syntax highlighting. */

