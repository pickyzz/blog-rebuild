name: Netlify Builds
on:
  push:

# Automatically cancel in-progress actions on the same branch
concurrency:
  group: ${{ github.workflow }}-${{ github.event_name == 'pull_request_target' && github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac # v4
        name: "Checkout Source Code"
        with:
          submodules: true
          token: ${{ secrets.GH_TOKEN }}

      - name: "Setup Node.js environment"
        uses: actions/setup-node@v3
        with:
          node-version-file: ".nvmrc"

      - name: Setup Bun Runtime
        uses: antongolub/action-setup-bun@v1 # or @v1.x.x
        with:
          cache: true

      - name: "Get Bun store directory"
        id: bun-cache
        run: |
          echo "set-output name=dir" >> $GITHUB_OUTPUT

      - name: "Setup jampack caches"
        uses: actions/cache@v3
        id: cache
        with:
          path: |
            node_modules
            ${{ steps.bun-cache.outputs.dir }}
            .jampack
          key: |
            ${{ runner.os }}-node_modules-${{ hashFiles('**/yarn.lock') }}
            jampack-${{ github.run_id }}
          restore-keys: |
            ${{ runner.os }}-node_modules-
            jampack

      - name: "Install dependencies"
        if: steps.cache.outputs.cache-hit != 'true'
        run: bun install --frozenLockfile
        env:
          CI: true

      - name: "Build Development"
        run: bun run build

      - name: "Deploy to Netlify"
        uses: nwtgck/actions-netlify@v2.1
        with:
          publish-dir: "./dist"
          production-branch: main
          github-token: ${{ secrets.GH_TOKEN }}
          deploy-message: "${{ github.event.head_commit.message }}"
          enable-pull-request-comment: true
          overwrites-pull-request-comment: true
          enable-commit-comment: true
          enable-commit-status: true
        env:
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
