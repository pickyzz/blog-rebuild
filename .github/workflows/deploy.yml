name: Build and deploy
on:
  push:

# Automatically cancel in-progress actions on the same branch
concurrency:
  group: ${{ github.workflow }}-${{ github.event_name == 'pull_request_target' && github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  cypress-run:
    runs-on: macos-latest
    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true
          token: ${{ secrets.GH_TOKEN }}
      
      - name: "Setup Bun Runtime"
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: canary

      - name: "Create production env"
        id: env
        run: |
          echo "WALINE_SERVER=${{ secrets.WALINE_SERVER }}" > .env.development

      - name: "Install dependencies"
        run: bun install

      - name: Cypress run
        uses: cypress-io/github-action@v6
        with:
          start: bun run start

  build:
    needs: cypress-run
    runs-on: macos-latest
    permissions:
      contents: read
      deployments: write

    steps:
      - uses: actions/checkout@v4
        name: "Checkout Source Code"
        with:
          submodules: true
          token: ${{ secrets.GH_TOKEN }}

      - name: "Setup Bun Runtime"
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: canary

      - name: "Setup jampack cache"
        uses: actions/cache@v3
        id: jampack
        with:
          path: .jampack
          key: jampack-${{ runner.os }}-${{ github.run_id }}
          restore-keys: |
            jampack

      - name: "Install dependencies"
        run: bun install

      - name: "Run linter"
        run: |
          bun run lint

      - name: "Create production env"
        id: env
        run: |
          echo "WALINE_SERVER=${{ secrets.WALINE_SERVER }}" > .env.production

      - name: "Build output"
        run: bun run build

      - name: "Publish to Cloudflare Pages"
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: pickyzz-blog
          directory: dist
          # Optional: Enable this if you want to have GitHub Deployments triggered
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
          wranglerVersion: "3"
