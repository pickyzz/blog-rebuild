name: CI/CD Pipeline

# Define minimal required permissions
permissions:
  contents: read
  actions: read
  security-events: write

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# Automatically cancel in-progress actions on the same branch
concurrency:
  group: ${{ github.workflow }}-${{ github.event_name == 'pull_request_target' && github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  validate:
    runs-on: ubuntu-latest
    outputs:
      cache-hit: ${{ steps.cache.outputs.cache-hit }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Bun
      uses: oven-sh/setup-bun@v2
      with:
        bun-version: latest

    - name: Cache dependencies
      id: cache
      uses: actions/cache@v4
      with:
        path: |
          node_modules
          .astro
          dist
        key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
        restore-keys: |
          ${{ runner.os }}-bun-

    - name: Install dependencies
      if: steps.cache.outputs.cache-hit != 'true'
      run: bun install

    - name: Type check
      run: bun run check

    - name: Lint
      run: bun run lint
      
  test:
    needs: validate
    runs-on: ubuntu-latest
    outputs:
      test-failed: ${{ steps.test-result.outputs.failed }}
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        submodules: true
        token: ${{ secrets.GH_TOKEN }}

    - name: Setup Bun
      uses: oven-sh/setup-bun@v2
      with:
        bun-version: latest

    - name: Cache dependencies
      id: cache
      uses: actions/cache@v4
      with:
        path: |
          node_modules
          .astro
          dist
        key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
        restore-keys: |
          ${{ runner.os }}-bun-

    - name: Install dependencies
      if: steps.cache.outputs.cache-hit != 'true'
      run: bun install

    - name: Create env file
      env:
        DATABASE_ID: ${{ secrets.DATABASE_ID_TEST }}
        NOTION_KEY: ${{ secrets.NOTION_KEY }}
      shell: bash
      run: |
        touch .env
        echo "DATABASE_ID=$DATABASE_ID" >> .env
        echo "NOTION_KEY=$NOTION_KEY" >> .env

    - name: Install Playwright Browsers
      run: npx playwright install --with-deps

    - name: Sync content and run tests
      id: test-run
      env:
        NOTION_TOKEN: ${{ secrets.NOTION_TOKEN }}
        NOTION_DATABASE_ID: ${{ secrets.NOTION_DATABASE_ID }}
      timeout-minutes: 10
      continue-on-error: true
      run: |
        # Sync content first (with retry)
        for i in 1 2 3; do
          if bun run sync:published; then
            break
          fi
          echo "Retry $i: Sync failed, waiting 10s..."
          sleep 10
        done
        
        # Run tests with increased timeout
        bun run test || echo "failed=true" >> $GITHUB_OUTPUT

    - name: Check test result
      id: test-result
      if: always()
      run: |
        if [ "${{ steps.test-run.outcome }}" == "failure" ]; then
          echo "failed=true" >> $GITHUB_OUTPUT
          echo "::error::Tests failed! Check the test output for details."
          # Clear cache on test failure to prevent bad cache
          rm -rf node_modules/.cache
          rm -rf .astro
        else
          echo "failed=false" >> $GITHUB_OUTPUT
        fi
      
  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name == github.repository
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Bun
      uses: oven-sh/setup-bun@v2
      with:
        bun-version: latest

    - name: Restore cache
      uses: actions/cache@v4
      with:
        path: |
          node_modules
          .astro
          dist
        key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}

    - name: Build
      id: build
      run: bun run build || (rm -rf .astro && bun run build)

    - name: Cache build output
      if: success() && github.ref == 'refs/heads/main'
      uses: actions/cache/save@v4
      with:
        path: |
          .astro
          dist
        key: build-${{ github.sha }}

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: dist
        
  security:
    needs: validate
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
      - uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: javascript

      - name: Autobuild
        uses: github/codeql-action/autobuild@v2

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
