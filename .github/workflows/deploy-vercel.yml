name: Build (GitHub) and Deploy to Vercel

on:
  push:
    branches: [ ssr-notion-refactor ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      deployments: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Setup Bun runtime
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: canary

      - name: Create .env from secrets (if provided)
        env:
          NOTION_KEY: ${{ secrets.NOTION_KEY }}
          DATABASE_ID: ${{ secrets.DATABASE_ID }}
        run: |
          echo "Creating .env from provided secrets"
          touch .env
          if [ -n "$NOTION_KEY" ]; then echo "NOTION_KEY=$NOTION_KEY" >> .env; fi
          if [ -n "$DATABASE_ID" ]; then echo "DATABASE_ID=$DATABASE_ID" >> .env; fi

      - name: Install dependencies
        run: bun install

      - name: Build (production)
        env:
          NODE_ENV: production
        run: |
          # Ensure a production build so astro uses the Vercel adapter (see astro.config.mjs)
          bun run build

      - name: Install Vercel CLI
        run: npm install -g vercel@latest

      - name: Deploy prebuilt output to Vercel (CLI)
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        run: |
          # Deploy the prebuilt ./dist directory from repo root so Vercel uses the provided files
          if [ -z "$VERCEL_TOKEN" ]; then echo "VERCEL_TOKEN is not set; aborting"; exit 1; fi
          if [ -z "$VERCEL_PROJECT_ID" ]; then echo "VERCEL_PROJECT_ID is not set; aborting"; exit 1; fi
          vercel deploy --prebuilt ./dist --prod --project "$VERCEL_PROJECT_ID" --token "$VERCEL_TOKEN" --confirm
